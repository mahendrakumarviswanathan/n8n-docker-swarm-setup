version: "3.8"

volumes:
  n8n_storage:
    external: true
  postgres_storage:
    external: true
  ollama_storage:
    external: true
  qdrant_storage:
    external: true

networks:
  demo:
    external: true
    driver: overlay

services:
  postgres:
    image: postgres:15
    environment:
      - POSTGRES_USER=n8n
      - POSTGRES_PASSWORD=n8npass
      - POSTGRES_DB=n8ndb
    volumes:
      - postgres_storage:/var/lib/postgresql/data
    networks:
      - demo
    deploy:
      placement:
        constraints: [node.role == manager]

  n8n:
    image: n8nio/n8n:latest
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8ndb
      - DB_POSTGRESDB_USER=n8n
      - DB_POSTGRESDB_PASSWORD=n8npass
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=adminpass
      - N8N_HOST=n8n.local
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - NODE_ENV=production
    volumes:
      - n8n_storage:/home/node/.n8n
    networks:
      - demo
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
      placement:
        constraints: [node.role == manager]

  ollama:
    image: ollama/ollama
    volumes:
      - ollama_storage:/root/.ollama
    networks:
      - demo
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]

  qdrant:
    image: qdrant/qdrant
    volumes:
      - qdrant_storage:/qdrant/storage
    networks:
      - demo
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]